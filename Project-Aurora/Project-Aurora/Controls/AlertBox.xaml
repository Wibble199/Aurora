<UserControl x:Class="Aurora.Controls.AlertBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="clr-namespace:Aurora.Controls"
             xmlns:utils="clr-namespace:Aurora.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Grid.RowSpan="999" Grid.ColumnSpan="999"
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <c:AlertBoxIconConverter x:Key="AlertBoxIconConverter" />
            <c:AlertBoxIconToVisibilityConverter x:Key="AlertBoxIconToVisibilityConverter" />
            <utils:ValueConverterGroup x:Key="InverseBooleanToVisibilityConverter">
                <utils:BooleanInverterConverter />
                <BooleanToVisibilityConverter />
            </utils:ValueConverterGroup>
            <utils:StyleConverter x:Key="StyleConverter" DefaultStyleName="Panel1Button" />

            <Duration x:Key="AnimationInDuration">0:0:0.3</Duration>
            <BackEase x:Key="AnimationInEasingFunction" EasingMode="EaseOut" />
            <Storyboard x:Key="AnimationIn">
                <DoubleAnimation Storyboard.TargetName="AlertBoxGrid" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="{StaticResource AnimationInDuration}" EasingFunction="{StaticResource AnimationInEasingFunction}" />
                <DoubleAnimation Storyboard.TargetName="Panel" Storyboard.TargetProperty="(Panel.RenderTransform).(ScaleTransform.ScaleX)" From="0.4" To="1" Duration="{StaticResource AnimationInDuration}" EasingFunction="{StaticResource AnimationInEasingFunction}" />
                <DoubleAnimation Storyboard.TargetName="Panel" Storyboard.TargetProperty="(Panel.RenderTransform).(ScaleTransform.ScaleY)" From="0.4" To="1" Duration="{StaticResource AnimationInDuration}" EasingFunction="{StaticResource AnimationInEasingFunction}" />
            </Storyboard>

            <Duration x:Key="AnimationOutDuration">0:0:0.1</Duration>
            <Storyboard x:Key="AnimationOut">
                <DoubleAnimation Storyboard.TargetName="AlertBoxGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource AnimationOutDuration}" />
                <DoubleAnimation Storyboard.TargetName="Panel" Storyboard.TargetProperty="(Panel.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="{StaticResource AnimationOutDuration}" />
                <DoubleAnimation Storyboard.TargetName="Panel" Storyboard.TargetProperty="(Panel.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="{StaticResource AnimationOutDuration}" />
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid x:Name="AlertBoxGrid">
        <!-- Backdrop -->
        <!-- This is a button because the Rectangle has no Click event, and I don't want closure to trigger on MouseDown or MouseUp. -->
        <Button Click="Backdrop_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="#8000" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <!-- AlertBox -->
        <Border x:Name="Panel" Width="{Binding Width}" MaxWidth="520" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource ForegroundElementBrush}" Background="{StaticResource BaseBackgroundBrush}" CornerRadius="{StaticResource ControlBorderRadius}" SnapsToDevicePixels="True" ClipToBounds="True" RenderTransformOrigin="0.5,0.5">
            <!-- RenderTransform (required for animations) -->
            <Border.RenderTransform>
                <ScaleTransform />
            </Border.RenderTransform>

            <!-- AlertBox content -->
            <Grid>
                <Button HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource FlatButton}" Visibility="{Binding Path=IsDedicatedWindow, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Click="Backdrop_Click">
                    <Path Margin="2" Data="M 0,0 L 6,6 M 6,0 L 0,6" Stroke="{StaticResource BaseButtonForegroundBrush}" Opacity="0.4" />
                </Button>

                <StackPanel SnapsToDevicePixels="True">
                    <DockPanel Margin="12" LastChildFill="True" SnapsToDevicePixels="True">
                        <!-- Icon -->
                        <Image DockPanel.Dock="Left" Source="{Binding Path=Icon, Converter={StaticResource AlertBoxIconConverter}}" Width="48" Height="48" Margin="0,0,16,0" Visibility="{Binding Path=Icon, Converter={StaticResource AlertBoxIconToVisibilityConverter}}" />

                        <!-- Title -->
                        <TextBlock DockPanel.Dock="Top" Text="{Binding Title}" FontSize="16" FontWeight="Bold" Foreground="{StaticResource ForegroundTextBrush}" SnapsToDevicePixels="True" />

                        <!-- Non-text content -->
                        <ContentPresenter Content="{Binding Content}" Margin="0,12" SnapsToDevicePixels="True" TextBlock.Foreground="{StaticResource ForegroundTextBrush}" TextBlock.FontSize="14">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type c:SpacedStackPanel}">
                                    <Setter Property="SpacingAmount" Value="8" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </DockPanel>

                    <!-- Buttons -->
                    <Border DockPanel.Dock="Bottom" Padding="12" Background="{StaticResource Panel1BackgroundBrush}" SnapsToDevicePixels="True">
                        <Border.CornerRadius>
                            <CornerRadius BottomLeft="{StaticResource ControlBorderRadiusAmount}" BottomRight="{StaticResource ControlBorderRadiusAmount}" />
                        </Border.CornerRadius>

                        <ItemsControl ItemsSource="{Binding Buttons}" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Label}" Margin="8,0,0,0" Padding="16,6" Click="Button_Click">
                                        <Button.Style>
                                            <MultiBinding Converter="{StaticResource StyleConverter}">
                                                <MultiBinding.Bindings>
                                                    <Binding RelativeSource="{RelativeSource Self}" />
                                                    <Binding Path="StyleName" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </Button.Style>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
