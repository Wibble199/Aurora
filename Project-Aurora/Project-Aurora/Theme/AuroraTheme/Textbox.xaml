<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:u="clr-namespace:Aurora.Utils"
    xmlns:a="clr-namespace:Aurora.Theme.Addons"
    xmlns:controls="clr-namespace:Aurora.Controls">

    <u:StringToImageSourceConverter x:Key="StringToImageSourceConverter" />
    <u:ThicknessAdditionConverter x:Key="ThicknessAdditionConverter" />
    <Thickness x:Key="MarginIcon" Left="3" Top="5" Right="24" Bottom="1" />
    <Thickness x:Key="MarginNoIcon" Left="3" Top="5" Right="3" Bottom="1" />

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextboxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextboxForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TextboxBorderThickness}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="a:TextboxAddons.Icon" Value="/Aurora;component/Resources/UIIcons/font-size.png" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="{StaticResource ControlBorderRadius}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ClipToBounds="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ThicknessAdditionConverter}, ConverterParameter={StaticResource MarginIcon}}" VerticalContentAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <controls:Icon Source="{Binding Path=(a:TextboxAddons.Icon), RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={x:Null}}" Width="18" Margin="6,0" HorizontalAlignment="Right" IsHitTestVisible="False" />

                            <!-- Placeholder text displayer -->
                            <TextBlock x:Name="PlaceholderText" IsHitTestVisible="False" Text="{Binding Path=(a:TextboxAddons.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="7,0,0,0" Foreground="{TemplateBinding Foreground}" Opacity=".4" Visibility="Collapsed" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder text triggers -->
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        
                        <!-- Trigger to remove margin of text when there is no icon -->
                        <Trigger Property="a:TextboxAddons.Icon" Value="{x:Null}">
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ThicknessAdditionConverter}, ConverterParameter={StaticResource MarginNoIcon}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!-- Condition that is effectively: IsFocussed || ShowAsFocussed (it's inverted to make it work: !(IsFocussed && ShowAsFocussed) )-->
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="a:TextboxAddons.ShowAsFocussed" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="{StaticResource TextboxBackgroundBrush}" Duration="{StaticResource AnimationDuration}" />
                            <u:BrushAnimation Storyboard.TargetProperty="BorderBrush" To="{StaticResource TextboxBorderBrush}" Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="{StaticResource TextboxBackgroundFocusBrush}" Duration="{StaticResource AnimationDuration}" />
                            <u:BrushAnimation Storyboard.TargetProperty="BorderBrush" To="{StaticResource TextboxBorderFocusBrush}" Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="a:TextboxAddons.Icon" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>