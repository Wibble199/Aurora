<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:u="clr-namespace:Aurora.Utils">

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border Height="14" Width="14" BorderBrush="#BABABA" BorderThickness="1" CornerRadius="2" Margin="0,0,6,0" HorizontalAlignment="Left" />
                        <Border x:Name="Background" Height="14" Width="14" Background="#BABABA" CornerRadius="3" Margin="0,0,6,0" HorizontalAlignment="Left" />
                        <Viewbox Margin="2,0,0,0" Height="10" Width="10" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Path x:Name="CheckMark" Opacity="0" Stroke="#1A1F26" StrokeThickness="1.2" Data="M0,2 L1,3 L4,0" />
                        </Viewbox>

                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="18,0,0,0" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark" To="0" Duration="{StaticResource AnimationDuration}" />
                                        <u:BrushAnimation Storyboard.TargetProperty="Background" Storyboard.TargetName="Background" To="Transparent" Duration="{StaticResource AnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark" To="1" Duration="{StaticResource AnimationDuration}" />
                                        <u:BrushAnimation Storyboard.TargetProperty="Background" Storyboard.TargetName="Background" To="#BABABA" Duration="{StaticResource AnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- Custom switch style for the checkbox -->
    <!-- Can set HorizontalContentAlignment to left or right to set the position of the label relative to the switch -->
    <Style x:Key="CheckboxSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource SwitchBackgroundSelectedBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SwitchBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource SwitchBorderThickness}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border x:Name="Background" Height="20" Width="36" Background="{StaticResource SwitchBackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Border x:Name="Thumb" Height="16" Width="16" Background="{StaticResource SwitchThumbBrush}" BorderBrush="{StaticResource SwitchThumbBorderBrush}" BorderThickness="{StaticResource SwitchThumbBorderThickness}" CornerRadius="8" Margin="2,0,0,0" HorizontalAlignment="Left" />
                        </Border>

                        <ContentPresenter x:Name="Content" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="42,0,0,0" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="Thumb" To="3,0,0,0" Duration="{StaticResource AnimationDuration}" />
                                        <u:BrushAnimation Storyboard.TargetProperty="Background" Storyboard.TargetName="Background" To="{TemplateBinding Background}" Duration="{StaticResource AnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="Thumb" To="17,0,0,0" Duration="{StaticResource AnimationDuration}" />
                                        <u:BrushAnimation Storyboard.TargetProperty="Background" Storyboard.TargetName="Background" To="{StaticResource SwitchBackgroundSelectedBrush}" Duration="{StaticResource AnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Left">
                            <Setter TargetName="Content" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,42,0" />
                            <Setter TargetName="Background" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>