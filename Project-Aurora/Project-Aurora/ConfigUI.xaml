<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:local="clr-namespace:Aurora"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:c="clr-namespace:Aurora.Controls"
    xmlns:settings="clr-namespace:Aurora.Settings"
    xmlns:l="clr-namespace:Aurora.Settings.Localization"
    xmlns:u="clr-namespace:Aurora.Utils"
    xmlns:a="clr-namespace:Aurora.Theme.Addons"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Class="Aurora.ConfigUI"
    mc:Ignorable="d"
    Width="1280" Height="820"
    MinWidth="926" MinHeight="575"
    MaxWidth="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" MaxHeight="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}" 
    Title="Aurora" WindowStyle="None" AllowsTransparency="True"
    Loaded="Window_Loaded" Initialized="Window_Initialized" Closing="Window_Closing" Activated="Window_Activated" Deactivated="Window_Deactivated" HorizontalContentAlignment="Stretch"  SizeChanged="Window_SizeChanged"
    DataContext="{Binding RelativeSource={RelativeSource Self}}" BorderBrush="Transparent" Background="{StaticResource BaseBackgroundBrush}"
    TextElement.Foreground="{StaticResource BaseTextBrush}">

    <!-- Override the default edges and captions that still appear even when WindowStyle is set to None. -->
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CaptionHeight="0" CornerRadius="0" />
    </WindowChrome.WindowChrome>

    <!-- Add a border when the window is maximised because Windows purposely oversizes the windows to hide the resize borders, so we have to
         work around that since we're using WindowStyle=None. -->
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=WindowState}" Value="Maximized">
                    <Setter Property="BorderThickness" Value="6,6,6,8" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <!-- Resources -->
    <Window.Resources>
        <local:ProfileNameResolver x:Key="ProfileNameResolver" />
        <local:FilterVisibleApplications x:Key="FilterVisibleApplications" />
        <local:ApplicationIsGenericToVisibilityConverter x:Key="IsGenericToVisConv" />

        <!-- Converter that checks if a value is 0 and returns a visibility -->
        <u:ValueConverterGroup x:Key="IsZeroToVisConverter">
            <u:NumericComparisonConverter CompareTo=".1" Type="{x:Type sys:Single}" Comparison="LT" />
            <BooleanToVisibilityConverter />
        </u:ValueConverterGroup>
        
        <!-- Style that sets the image of the hidden toggle button to be an eye or an eye with a slash depending on the toggle state. -->
        <Style x:Key="ToggleHiddenApplicationsButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource Panel2ToggleButton}">
            <Setter Property="Content">
                <Setter.Value>
                    <c:Icon Source="Resources/UIIcons/eye-30.png" Margin="2,0" Width="18" Height="18" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Show hidden applications" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <c:Icon Source="Resources/UIIcons/hide-30.png" Margin="2,0" Width="18" Height="18" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ToolTip" Value="Hide hidden applications" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style (including hover/select effects) for the application list box item -->
        <Style x:Key="ApplicationsListItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{StaticResource Panel2BackgroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border CornerRadius="{StaticResource ControlBorderRadius}" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="{StaticResource ApplicationListboxItemHoverBrush}" Duration="{StaticResource AnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="Transparent" Duration="{StaticResource AnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="{StaticResource ApplicationListboxItemSelectedBrush}" Duration="{StaticResource AnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <u:BrushAnimation Storyboard.TargetProperty="Background" To="Transparent" Duration="{StaticResource AnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Visual brush for a hatched brush for the application icons when the application is hidden. -->
        <VisualBrush x:Key="HatchedBrush" TileMode="Tile" Viewport="0,0,5,5" ViewportUnits="Absolute" Viewbox="0,0,5,5" ViewboxUnits="Absolute">
            <VisualBrush.Visual>
                <!-- Sourced from: https://stackoverflow.com/questions/22919296/create-a-hatch-pattern-in-wpf -->
                <Path Data="M 0 5 L 5 0 M -2 2 L 2 -2 M 3 7 L 7 3" StrokeThickness="2" Stroke="#FFFFFF" StrokeEndLineCap="Square" RenderOptions.EdgeMode="Aliased" />
            </VisualBrush.Visual>
        </VisualBrush>
    </Window.Resources>

    <!-- Window Edge Border -->
    <Border BorderBrush="#12161B" BorderThickness="1">
        <!-- Window contents -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220px" />
                <ColumnDefinition Width="220px" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="24px" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <!-- Title bar -->
            <Grid Grid.ColumnSpan="999" Background="{StaticResource ForegroundElementBrush}" Panel.ZIndex="9999">
                <!-- Title bar label -->
                <TextBlock Text="Aurora" FontSize="16" FontWeight="Bold" Margin="5,-1" HorizontalAlignment="Left" />

                <!-- Invisible title bar draggable -->
                <Rectangle Margin="0,0,75,0" Fill="Transparent" MouseDown="TitleBar_MouseDown" />

                <!-- Window controls (maximize etc) -->
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,0,1">
                    <Button Click="MinimiseButton_Click" Style="{StaticResource FlatButton}">
                        <c:Icon Source="Resources/UIIcons/minimize-window-30.png" Margin="2,0" Height="12" Width="12" />
                    </Button>
                    <Button Click="MaximiseButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <c:Icon Source="Resources/UIIcons/maximize-window-30.png" Margin="2,0" Height="12" Width="12" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <c:Icon Source="Resources/UIIcons/restore-window-30.png" Margin="2,0" Height="14" Width="14" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Click="CloseButton_Click" Style="{StaticResource FlatButton}">
                        <c:Icon Source="Resources/UIIcons/delete-30.png" Foreground="{StaticResource DangerBrush}" Margin="2,0" Height="12" Width="12" />
                    </Button>
                </StackPanel>
            </Grid>

            <!-- Left panel (the contents of the left panel don't follow the grid rows, so use a DockPanel to place them instead) -->
            <DockPanel LastChildFill="True" Background="{StaticResource Panel2BackgroundBrush}" Grid.Row="1" Grid.RowSpan="999">
                <!-- Aurora logo header -->
                <Image DockPanel.Dock="Top" Source="Resources/aurora_logo.png" Height="48" Margin="8" Grid.RowSpan="999" />

                <!-- Application search box -->
                <TextBox x:Name="ApplicationSearchBox" DockPanel.Dock="Top" Margin="8,0,8,8" a:TextboxAddons.Icon="Resources/UIIcons/search-30.png" a:TextboxAddons.Placeholder="Search applications..." />

                <!-- Application list controls -->
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Margin="2,4" Click="AddApplicationButton_Click" Style="{StaticResource Panel2Button}" ToolTip="Add new application">
                        <c:Icon Source="Resources/UIIcons/plus-30.png" Foreground="{StaticResource SuccessBrush}" Margin="2,0" Width="18" Height="18"/>
                    </Button>
                    <ToggleButton IsChecked="{Binding ShowHiddenApplications, Mode=TwoWay}" Margin="2,4" Style="{StaticResource ToggleHiddenApplicationsButtonStyle}" ToolTip="Show/hide hidden applications" />
                    <Button Margin="2,4" Style="{StaticResource Panel2Button}" ToolTip="Plugins">
                        <c:Icon Source="Resources/UIIcons/puzzle-30.png" Margin="2,0" Width="18" Height="18" />
                    </Button>
                    <Button Margin="2,4" Click="SettingsButton_Click" Style="{StaticResource Panel2Button}" ToolTip="Settings">
                        <c:Icon Source="Resources/UIIcons/maintenance-30.png" Margin="2,0" Width="18" Height="18"/>
                    </Button>
                </StackPanel>

                <!-- Application list (Last child because we want this one to fill remaining space) -->
                <ListBox x:Name="ApplicationsList" SelectedItem="{Binding FocusedApplication}" ItemContainerStyle="{StaticResource ApplicationsListItemStyle}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" BorderThickness="0">
                    <ListBox.ItemsSource>
                        <MultiBinding Converter="{StaticResource FilterVisibleApplications}">
                            <Binding Path="AllApplications" />
                            <Binding Path="ShowHiddenApplications" />
                            <Binding ElementName="ApplicationSearchBox" Path="Text" />
                        </MultiBinding>
                    </ListBox.ItemsSource>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="AppIcon" Source="{Binding Icon}" Width="24" Height="24" Margin="2,3,6,3" />
                                <TextBlock x:Name="AppName" Text="{Binding Path=., Converter={StaticResource ProfileNameResolver}}" Foreground="#9399A2" FontSize="14px" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" />
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Settings.Hidden}" Value="True">
                                    <Setter TargetName="AppIcon" Property="OpacityMask" Value="{StaticResource HatchedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Settings.IsEnabled}" Value="False">
                                    <Setter TargetName="AppIcon" Property="Effect">
                                        <Setter.Value>
                                            <settings:GreyscaleEffect DesaturationFactor="0" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="AppName" Property="Opacity" Value="0.4" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ContextMenu>
                        <ContextMenu Opened="ApplicationContext_Opened">
                            <MenuItem Header="Enabled" IsCheckable="True" IsChecked="{Binding Settings.IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <MenuItem Header="Hidden" IsCheckable="True" IsChecked="{Binding Settings.Hidden, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="ApplicationContextHidden_Checked" Unchecked="ApplicationContextHidden_Checked"/>
                            <MenuItem Header="Delete" Click="RemoveApplicationButton_Click" Visibility="{Binding ., Converter={StaticResource IsGenericToVisConv}}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
            </DockPanel>

            <!-- Profile/layer list -->
            <Grid x:Name="gridManagers" Grid.Column="1" Grid.RowSpan="999" Grid.Row="1" Background="{StaticResource Panel1BackgroundBrush}">
                <StackPanel x:Name="stackPanelManagers">
                    <Button HorizontalContentAlignment="Left" Margin="0,2" PreviewMouseDown="brdOverview_PreviewMouseDown">
                        <DockPanel LastChildFill="False" Width="214">
                            <c:Icon Source="/Aurora;component/Resources/UIIcons/information-30.png" DockPanel.Dock="Left" Height="18" Width="18" Margin="0,0,4,0" />
                            <TextBlock Text="Overview" DockPanel.Dock="Left" />
                            <c:Icon Source="/Aurora;component/Resources/UIIcons/expand-arrow-30.png" DockPanel.Dock="Right" Height="18" Width="18" Margin="0,0,4,0" />
                        </DockPanel>
                    </Button>
                    <settings:Control_ProfileManager x:Name="ctrlProfileManager" FocusedApplication="{Binding FocusedApplication}" Height="25" Margin="0,3,0,0" Background="#00000000" PreviewMouseDown="ctrlProfileManager_PreviewMouseDown" />
                    <settings:Control_LayerList x:Name="ctrlOverlayLayerManager" Margin="0,3,0,0" SelectedLayer="{Binding SelectedLayer, Mode=TwoWay}" FocusedApplication="{Binding FocusedApplication}" LayerCollection="{Binding Path=FocusedApplication.Profile.OverlayLayers}" ListTitle="Overlay Layers" Background="#00000000" PreviewMouseDown="ctrlOverlayLayerManager_PreviewMouseDown" />
                    <settings:Control_LayerList x:Name="ctrlLayerManager" Margin="0,3,0,0" SelectedLayer="{Binding SelectedLayer, Mode=TwoWay}" FocusedApplication="{Binding FocusedApplication}" LayerCollection="{Binding Path=FocusedApplication.Profile.Layers}" Background="#00000000" PreviewMouseDown="ctrlLayerManager_PreviewMouseDown" />
                </StackPanel>
            </Grid>

            <!-- Device preview -->
            <Viewbox x:Name="keyboard_viewbox" Grid.Row="1" Grid.Column="2" StretchDirection="Both" Margin="0,0,7,0">
                <Border Margin="5,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Background="#A51E1E1E" CornerRadius="8" MinWidth="650" MinHeight="216">
                    <Grid>
                        <Grid x:Name="keyboard_grid" Margin="10" Height="192" VerticalAlignment="Top" HorizontalAlignment="Left" Width="803">
                            <Grid.CacheMode>
                                <BitmapCache EnableClearType="True"/>
                            </Grid.CacheMode>
                        </Grid>
                        <Label x:Name="keyboard_record_message" Content="Please select key(s) you want to assign" HorizontalAlignment="Right" Foreground="Red" Height="26" VerticalAlignment="Top" Margin="0,0,10,0" Grid.Column="1" Padding="0" IsHitTestVisible="False"  />
                    </Grid>
                </Border>
            </Viewbox>

            <!-- 0% brightness warning -->
            <Border Grid.Column="2" Grid.Row="1" Background="{StaticResource Panel1BackgroundBrush}" BorderBrush="{StaticResource WarningBrush}" BorderThickness="1" CornerRadius="{StaticResource ControlBorderRadius}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="16,8" Padding="4" Visibility="{Binding Path=GlobalBrightness, Source={x:Static local:Global.Configuration}, Converter={StaticResource IsZeroToVisConverter}}" l:Localization.TooltipKey="low_brightness_warn">
                <c:Icon Width="24" Height="24" Source="Resources/UIIcons/warning-50.png" Foreground="{StaticResource WarningBrush}" />
            </Border>

            <!-- Properties panel -->
            <ContentPresenter Margin="8" Grid.Row="2" Grid.Column="2" Content="{Binding SelectedControl}" />

            <!-- Tray icon -->
            <tb:TaskbarIcon x:Name="trayicon" Visibility="Visible" ToolTipText="Aurora" IconSource="Resources/aurora_icon.ico" TrayMouseDoubleClick="trayicon_TrayMouseDoubleClick">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Background="#FF181818" HorizontalContentAlignment="Center">
                        <ContextMenu.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Background="#FF181818" />
                            </ItemsPanelTemplate>
                        </ContextMenu.ItemsPanel>
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="-20,0,-40,0">
                                    <!--this part is important-->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Ident}"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Description}"/>
                                </Grid>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>

                        <MenuItem x:Name="trayicon_menu_settings" Header="Open Aurora" Click="trayicon_menu_settings_Click" Foreground="White" />
                        <MenuItem x:Name="trayicon_menu_quit" Header="Quit" Click="trayicon_menu_quit_Click" Foreground="White" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </Grid>
    </Border>
</Window>
